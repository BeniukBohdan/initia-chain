name: Build and Upload Multi-Platform Binaries

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64, windows/amd64, windows/arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.4'

      - name: Build for ${{ matrix.platform }}
        env:
          GOOS: ${{ matrix.platform.split('/')[0] }}
          GOARCH: ${{ matrix.platform.split('/')[1] }}
        run: |
          echo "Building for GOOS=$GOOS and GOARCH=$GOARCH"
          mkdir -p build/${GOOS}_${GOARCH}
          go build -o build/${GOOS}_${GOARCH}/initiad ./cmd/initiad

      - name: Create tarballs
        run: |
          cd build
          for dir in *; do
            tar -czvf initia_${GITHUB_REF#refs/tags/}_${dir}.tar.gz ${dir}
          done

      - name: Verify binary architecture
        run: |
          file ./build/linux_amd64/initiad || true
          file ./build/linux_arm64/initiad || true
          file ./build/windows_amd64/initiad.exe || true
          file ./build/windows_arm64/initiad.exe || true

      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Upload to GCS
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          for file in ./build/*.tar.gz; do
            gsutil cp ${file} gs://${GCS_BUCKET}/initia/${GITHUB_REF#refs/tags}/
          done

      - name: Verify upload and Generate public URL
        env:
          GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
        run: |
          for file in ./build/*.tar.gz; do
            basename=$(basename ${file})
            if gsutil stat gs://${GCS_BUCKET}/initia/${GITHUB_REF#refs/tags}/${basename}; then
              echo "File successfully uploaded"
              echo "Public URL: https://storage.googleapis.com/${GCS_BUCKET}/initia/${GITHUB_REF#refs/tags}/${basename}" >> $GITHUB_STEP_SUMMARY
            else
              echo "File upload failed"
              exit 1
            fi
          done
