syntax = "proto3";

package ibc.applications.fetchprice.v1;

option go_package = "github.com/initia-labs/initia/x/ibc/fetchprice/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

// CurrencyPrice is the information necessary for initialization of a
// CurrencyPrice.
message CurrencyPrice {
  // The currency id is the string with "BASE/QUOTE" format.
  string     currency_id = 1;
  QuotePrice quote_price = 2 [(gogoproto.nullable) = false];
}

// QuotePrice is the representation of the aggregated prices for a CurrencyPair,
// where price represents the price of Base in terms of Quote
message QuotePrice {
  string price = 1 [
    (cosmos_proto.scalar)  = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable)   = false
  ];

  // decimals represents the number of decimals that the quote-price is
  // represented in. For Pairs where ETHEREUM is the quote this will be 18,
  // otherwise it will be 8.
  uint64 decimals = 2;

  // BlockTimestamp tracks the block height associated with this price update.
  // We include block timestamp alongside the price to ensure that smart
  // contracts and applications are not utilizing stale oracle prices.
  google.protobuf.Timestamp block_timestamp = 3 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];

  // BlockHeight is block height of provider chain.
  uint64 block_height = 4;
}
