syntax = "proto3";
package initia.gov.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/gov/v1/gov.proto";
import "amino/amino.proto";

option go_package            = "github.com/initia-labs/initia/x/gov/types";
option (gogoproto.equal_all) = true;

// Params defines the parameters for the x/gov module.
message Params {
  option (amino.name)                 = "gov/Params";
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  // Minimum deposit for a proposal to enter voting period.
  repeated cosmos.base.v1beta1.Coin min_deposit = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // Maximum period for Atom holders to deposit on a proposal. Initial value: 2
  // months.
  google.protobuf.Duration max_deposit_period = 2
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdduration) = true];

  // Duration of the voting period.
  google.protobuf.Duration voting_period = 3
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdduration) = true];

  //  Minimum percentage of total stake needed to vote for a result to be
  //  considered valid.
  string quorum = 4 [(cosmos_proto.scalar) = "cosmos.Dec"];

  //  Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
  string threshold = 5 [(cosmos_proto.scalar) = "cosmos.Dec"];

  //  Minimum value of Veto votes to Total votes ratio for proposal to be
  //  vetoed. Default value: 1/3.
  string veto_threshold = 6 [(cosmos_proto.scalar) = "cosmos.Dec"];

  //  The ratio representing the proportion of the deposit value that must be paid at proposal submission.
  string min_initial_deposit_ratio = 7 [(cosmos_proto.scalar) = "cosmos.Dec"];

  // The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
  //
  // Since: cosmos-sdk 0.50
  string proposal_cancel_ratio = 8 [(cosmos_proto.scalar) = "cosmos.Dec"];

  // The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
  // If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
  //
  // Since: cosmos-sdk 0.50
  string proposal_cancel_dest = 9 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // Duration of the voting period of an expedited proposal.
  //
  // Since: cosmos-sdk 0.50
  google.protobuf.Duration expedited_voting_period = 10
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true, (gogoproto.stdduration) = true];

  // Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.
  //
  // Since: cosmos-sdk 0.50
  string expedited_threshold = 11 [(cosmos_proto.scalar) = "cosmos.Dec"];

  //  Minimum expedited deposit for a proposal to enter voting period.
  repeated cosmos.base.v1beta1.Coin expedited_min_deposit = 12
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // burn deposits if a proposal does not meet quorum
  bool burn_vote_quorum = 13;

  // burn deposits if the proposal does not enter voting period
  bool burn_proposal_deposit_prevote = 14;

  // burn deposits if quorum with vote type no_veto is met
  bool burn_vote_veto = 15;

  // The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
  // Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
  // required.
  //
  // Since: cosmos-sdk 0.50
  string min_deposit_ratio = 16 [(cosmos_proto.scalar) = "cosmos.Dec"];

  // Minimum deposit for a emergency proposal to enter voting period.
  repeated cosmos.base.v1beta1.Coin emergency_min_deposit = 91
      [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];

  // Tally interval for emergency proposal.
  google.protobuf.Duration emergency_tally_interval = 92
      [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}
